{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sinan\\\\Desktop\\\\Project\\\\calender\\\\calendar-app\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  currentMonth,\n  events\n}) => {\n  const today = dayjs();\n  const firstDayOfMonth = dayjs(currentMonth).startOf('month');\n  // const lastDayOfMonth = dayjs(currentMonth).endOf('month'); // This variable is not used\n  const daysInMonth = dayjs(currentMonth).daysInMonth();\n  const startDayOfWeek = firstDayOfMonth.day(); // 0 (Sunday) to 6 (Saturday)\n\n  const calendarDays = [];\n\n  // Add empty cells for days before the first day of the month\n  for (let i = 0; i < startDayOfWeek; i++) {\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-2 h-24\"\n    }, `empty-start-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }, this));\n  }\n\n  // Add cells for each day of the month\n  for (let day = 1; day <= daysInMonth; day++) {\n    const date = dayjs(currentMonth).date(day);\n    const isToday = date.isSame(today, 'day');\n    const dayEvents = events.filter(event => dayjs(event.date).isSame(date, 'day'));\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `border p-2 h-24 ${isToday ? 'bg-blue-100' : ''} relative`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-sm ${isToday ? 'font-bold text-blue-600' : ''}`,\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1 space-y-1 overflow-y-auto max-h-16\",\n        children: dayEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-200 p-1 rounded text-xs truncate\",\n          title: `${event.title} - ${event.time}`,\n          children: event.title\n        }, event.title + event.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, date.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n\n  // Calculate remaining empty cells to complete the grid (6 weeks * 7 days = 42 cells)\n  const totalCells = 42; // Assuming a 6x7 grid for simplicity\n  const remainingCells = totalCells - calendarDays.length;\n  for (let i = 0; i < remainingCells; i++) {\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-2 h-24\"\n    }, `empty-end-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this));\n  }\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-7\",\n    children: [weekdays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-2 text-center font-semibold bg-gray-50\",\n      children: day\n    }, day, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), calendarDays]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","dayjs","jsxDEV","_jsxDEV","Calendar","currentMonth","events","today","firstDayOfMonth","startOf","daysInMonth","startDayOfWeek","day","calendarDays","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","date","isToday","isSame","dayEvents","filter","event","children","map","title","time","toString","totalCells","remainingCells","length","weekdays","_c","$RefreshReg$"],"sources":["C:/Users/Sinan/Desktop/Project/calender/calendar-app/src/components/Calendar.js"],"sourcesContent":["import React from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Calendar = ({ currentMonth, events }) => {\r\n  const today = dayjs();\r\n  const firstDayOfMonth = dayjs(currentMonth).startOf('month');\r\n  // const lastDayOfMonth = dayjs(currentMonth).endOf('month'); // This variable is not used\r\n  const daysInMonth = dayjs(currentMonth).daysInMonth();\r\n  const startDayOfWeek = firstDayOfMonth.day(); // 0 (Sunday) to 6 (Saturday)\r\n\r\n  const calendarDays = [];\r\n\r\n  // Add empty cells for days before the first day of the month\r\n  for (let i = 0; i < startDayOfWeek; i++) {\r\n    calendarDays.push(<div key={`empty-start-${i}`} className=\"border p-2 h-24\"></div>);\r\n  }\r\n\r\n  // Add cells for each day of the month\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const date = dayjs(currentMonth).date(day);\r\n    const isToday = date.isSame(today, 'day');\r\n    const dayEvents = events.filter(event => dayjs(event.date).isSame(date, 'day'));\r\n\r\n    calendarDays.push(\r\n      <div \r\n        key={date.toString()} \r\n        className={`border p-2 h-24 ${isToday ? 'bg-blue-100' : ''} relative`}\r\n      >\r\n        <div className={`text-sm ${isToday ? 'font-bold text-blue-600' : ''}`}>{day}</div>\r\n        <div className=\"mt-1 space-y-1 overflow-y-auto max-h-16\">\r\n          {dayEvents.map(event => (\r\n            <div \r\n              key={event.title + event.time} \r\n              className=\"bg-green-200 p-1 rounded text-xs truncate\"\r\n              title={`${event.title} - ${event.time}`}\r\n            >\r\n              {event.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculate remaining empty cells to complete the grid (6 weeks * 7 days = 42 cells)\r\n  const totalCells = 42; // Assuming a 6x7 grid for simplicity\r\n  const remainingCells = totalCells - calendarDays.length;\r\n\r\n  for (let i = 0; i < remainingCells; i++) {\r\n    calendarDays.push(<div key={`empty-end-${i}`} className=\"border p-2 h-24\"></div>);\r\n  }\r\n\r\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-7\">\r\n      {weekdays.map(day => (\r\n        <div key={day} className=\"border p-2 text-center font-semibold bg-gray-50\">\r\n          {day}\r\n        </div>\r\n      ))}\r\n      {calendarDays}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}